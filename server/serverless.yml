service: TreeTrunkAPI

frameworkVersion: '3'

custom:
  poolName: terrance
  userTable: users
  tableThroughputs:
    dev: "10"
  customProviderName: tt.ether.login

provider:
  name: aws
  stage: dev
  region: us-east-2
  profile: rewrite
  runtime: nodejs12.x
  environment:
    DEVELOPER_PROVIDER_NAME: ${self:custom.customProviderName}
    USERTABLE_NAME: ${self:custom.userTable}
    IDENTITY_POOL_ID: { Ref: CognitoIdentityPool }
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:ExecuteStatement"
            - "dynamodb:PartiQLSelect"
          Resource:
            - "Fn::GetAtt": [UserTable, Arn]
            - "Fn::Join":
                - "/"
                - - { "Fn::GetAtt": [UserTable, Arn] }
                  - "index/*"
        - Effect: "Allow"
          Action:
            - "cognito-identity:GetCredentialsForIdentity"
            - "cognito-identity:GetOpenIdTokenForDeveloperIdentity"
          Resource:
            - "Fn::Join":
                - "/"
                - - "arn:aws:cognito-identity:${aws:region}:${aws:accountId}:identitypool"
                  - Ref: CognitoIdentityPool
functions:
  Login: ${file(resources/functions.yml):Login}
  GetNonce: ${file(resources/functions.yml):GetNonce}
  Signup: ${file(resources/functions.yml):Signup}
  Hello: ${file(resources/functions.yml):Hello}

resources:
  Resources:
    UserTable: ${file(resources/tables.yml):UserTable}
    CognitoIdentityPool: ${file(resources/cognito.yml):CognitoIdentityPool}
    CognitoAuthorizedRole: ${file(resources/cognito.yml):CognitoAuthorizedRole}
    CognitoUnAuthorizedRole: ${file(resources/cognito.yml):CognitoUnAuthorizedRole}
    CognitoIdentityPoolRolesMapping: ${file(resources/cognito.yml):CognitoIdentityPoolRolesMapping}
